
name: Test Matrix
on: push
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [job-one, job-two]
    env:
      LOCAL_LIBRARY_STATUS: false
      LOCAL_AUTOMATION_STATUS: false
      LOCAL_HOCPC_STATUS: false
    steps:
      - uses: actions/checkout@v2
      - name: Run test with ${{matrix.os}}
        id: run_unittest
        run: |
          echo "hello"
          if [ "${{ matrix.os}}" == "job-one" ]; then
              echo ::set-output name=status::failure
              echo "This is job one"
              echo ${LOCAL_LIBRARY_STATUS}
              echo ::set-output name=status::true
          elif [ "${{ matrix.os}}" == "job-two" ]; then
              echo ::set-output name=hihi::failure
              echo "This is job two"
          fi
      - name: Check build matrix statuss
        if: steps.run_unittest.outputs.status == 'true'
        run: echo "hehe"

  check-build:
    if: ${{ always() }}
    runs-on: job-one
    name: Build (matrix)
    needs: build
    steps:
      - name: Check build matrix status
        if: ${{ needs.build.result == 'success' }}
        run: |
          echo hello

