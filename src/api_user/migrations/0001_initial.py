# Generated by Django 2.2.7 on 2020-09-15 02:46

import api_user.models.photo
import api_user.models.profile
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid
from api_user.constants.banks import Banks


def load_banks(apps, schema_editor):
    bank_model = apps.get_model("api_user", "Banks")
    for bank_name in Banks.BANKS:
        bank_model.objects.create(name=bank_name[0])


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, null=True, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('title', models.CharField(default='member', max_length=100)),
            ],
            options={
                'db_table': 'hr_users',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=255, null=True)),
                ('personal_email', models.EmailField(max_length=255, null=True)),
                ('birth_day', models.DateField(null=True)),
                ('phone', models.CharField(max_length=11, null=True, validators=[django.core.validators.RegexValidator(message='A valid integer is required.', regex='^\\d+$'), django.core.validators.MinLengthValidator(9)])),
                ('teams', models.CharField(default='', max_length=100)),
                ('slack_id', models.CharField(max_length=255, null=True)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to=api_user.models.profile.name_file)),
                ('join_date', models.DateField(default=django.utils.timezone.now)),
                ('lunch', models.BooleanField(default=False)),
                ('lunch_weekly', models.CharField(max_length=20, null=True)),
                ('veggie', models.BooleanField(default=False)),
                ('line_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api_user.Profile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other')], default='Select', max_length=100)),
            ],
            options={
                'db_table': 'hr_profiles',
            },
        ),
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'hr_banks',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('photo', models.ImageField(blank=True, max_length=255, null=True, upload_to=api_user.models.photo.name_file)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='api_user.profile')),
            ],
            options={
                'db_table': 'hr_photos',
            },
        ),
        migrations.CreateModel(
            name='UserInsurance',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('social_insurance_code', models.CharField(max_length=50)),
                ('start_date', models.DateField(null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_insurance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_user_insurance',
            },
        ),
        migrations.CreateModel(
            name='UserIdentity',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('identity_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='A valid integer is required.', regex='^\\d+$'), django.core.validators.MinLengthValidator(9)])),
                ('issue_date', models.DateField()),
                ('issue_place', models.CharField(max_length=100)),
                ('place_of_birth', models.CharField(max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_identity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_user_identity',
            },
        ),
        migrations.CreateModel(
            name='UserFamilyMembers',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(null=True)),
                ('relationship', models.CharField(choices=[('FATHER', 'FATHER'), ('MOTHER', 'MOTHER'), ('CHILD', 'CHILD'), ('SPOUSE', 'SPOUSE')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_family', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_user_family_members',
            },
        ),
        migrations.CreateModel(
            name='UserEducation',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('school', models.CharField(max_length=100)),
                ('degree', models.CharField(max_length=100)),
                ('field_of_study', models.CharField(max_length=255)),
                ('graduated_year', models.IntegerField(null=True)),
                ('additional_notes', models.CharField(max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_education', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_user_education',
            },
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('permanent_address', models.CharField(max_length=100)),
                ('temporary_address', models.CharField(max_length=100, null=True)),
                ('household_registration_number', models.CharField(max_length=50, null=True)),
                ('contact_emergency', models.CharField(max_length=11, null=True, validators=[django.core.validators.RegexValidator(message='A valid integer is required.', regex='^\\d+$'), django.core.validators.MinLengthValidator(9)])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_contact', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_user_contact',
            },
        ),
        migrations.CreateModel(
            name='UserBanks',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('account_number', models.CharField(max_length=100)),
                ('branch', models.CharField(max_length=100, null=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_user.Banks')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_bank', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_user_banks',
            },
        ),
        migrations.RunPython(load_banks),
    ]
